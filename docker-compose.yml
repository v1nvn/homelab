version: "3"

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN_NAME}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN_NAME}
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false # require containers to define `traefik.enable=true` to be exposed
      - --api
      - --certificatesresolvers.certo.acme.email=${EMAIL}
      - --certificatesresolvers.certo.acme.storage=/acme.json
      - --certificatesresolvers.certo.acme.dnschallenge.provider=cloudflare
    ports:
      - 80:80
      - 443:443
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # allow Traefik to listen to Docker events
      - ./data/traefik/acme.json:/acme.json # stores ACME (HTTPS) certificates
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${USERNAME}:${PASSWORD_HASH}
      - traefik.http.routers.traefik.middlewares=admin
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=certo

  tunnel:
    image: cloudflare/cloudflared:latest
    container_name: tunnel
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}

  whoami:
    image: traefik/whoami:latest
    container_name: whoami
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${USERNAME}:${PASSWORD_HASH}
      - traefik.http.routers.whoami.middlewares=admin
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN_NAME}`)
      - traefik.http.routers.whoami.tls.certresolver=certo
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.services.whoami.loadBalancer.server.port=80

  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    restart: unless-stopped
    ports:
      - 53:53/tcp
      - 53:53/udp
      # - 3000:3000 # Required for first setup
    volumes:
      - ./data/adguard/work:/opt/adguardhome/work
      - ./data/adguard/conf:/opt/adguardhome/conf
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguard.entrypoints=websecure
      - traefik.http.routers.adguard.rule=Host(`adguard.${DOMAIN_NAME}`)
      - traefik.http.routers.adguard.tls.certresolver=certo
      - traefik.http.routers.adguard.service=adguard
      - traefik.http.services.adguard.loadBalancer.server.port=80

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    volumes:
      - ./data/homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=${UID}
      - PGID=${GID}
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.entrypoints=websecure
      - traefik.http.routers.homepage.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.routers.homepage.tls.certresolver=certo
      - traefik.http.routers.homepage.service=homepage
      - traefik.http.services.homepage.loadBalancer.server.port=3000

  stremio:
    image: stremio/server:latest
    container_name: stremio
    restart: unless-stopped
    volumes:
      - ./data/stremio:/app/settings
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NO_CORS=1
      - APP_PATH=/app/settings
    labels:
      - traefik.enable=true
      - traefik.http.routers.stremio.entrypoints=websecure
      - traefik.http.routers.stremio.rule=Host(`stremio.${DOMAIN_NAME}`)
      - traefik.http.routers.stremio.tls.certresolver=certo
      - traefik.http.routers.stremio.service=stremio
      - traefik.http.services.stremio.loadBalancer.server.port=11470

  emulator:
    image: lscr.io/linuxserver/emulatorjs:latest
    container_name: emulator
    restart: unless-stopped
    volumes:
      - ./data/emulator/config:/config
      - ./data/emulator/data:/data
    ports:
      - 3000:3000
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    labels:
      - traefik.enable=true
      - traefik.http.routers.emulator.entrypoints=websecure
      - traefik.http.routers.emulator.rule=Host(`emulator.${DOMAIN_NAME}`)
      - traefik.http.routers.emulator.tls.certresolver=certo
      - traefik.http.routers.emulator.service=emulator
      - traefik.http.services.emulator.loadBalancer.server.port=80

  octoprint:
    image: octoprint/octoprint:latest
    container_name: octoprint
    restart: unless-stopped
    environment:
      - ENABLE_MJPG_STREAMER=true
      - MJPG_STREAMER_INPUT="-r 1920x1080 -f 30"
    devices:
     - /dev/ttyUSB0:/dev/ttyUSB0
     - /dev/video0:/dev/video0
    volumes:
     - ./data/octoprint:/octoprint
     - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.octoprint.entrypoints=websecure
      - traefik.http.routers.octoprint.rule=Host(`octoprint.${DOMAIN_NAME}`)
      - traefik.http.routers.octoprint.tls.certresolver=certo
      - traefik.http.routers.octoprint.service=octoprint
      - traefik.http.services.octoprint.loadBalancer.server.port=80

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/portainer/data:/data
    environment:
      - TZ=${TIMEZONE}
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)
      - traefik.http.routers.portainer.tls.certresolver=certo
      - traefik.http.routers.portainer.service=portainer
      - traefik.http.services.portainer.loadBalancer.server.port=9000

  glances:
    image: nicolargo/glances:latest-full
    container_name: glances
    restart: always
    # network_mode: host -> This is causing issue
    # pid: host
    volumes:
      # - ./data/glances/glances.conf:/glances/conf/glances.conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /etc/os-release:/etc/os-release:ro
    environment:
      - TZ=${TIMEZONE}
      - GLANCES_OPT=-w
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${USERNAME}:${PASSWORD_HASH}
      - traefik.http.routers.glances.middlewares=admin
      - traefik.http.routers.glances.entrypoints=websecure
      - traefik.http.routers.glances.rule=Host(`glances.${DOMAIN_NAME}`)
      - traefik.http.routers.glances.tls.certresolver=certo
      - traefik.http.routers.glances.service=glances
      - traefik.http.services.glances.loadBalancer.server.port=61208

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  code:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code
    restart: unless-stopped
    volumes:
      - ./data/code/config:/config
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - PASSWORD=${PASSWORD}
      - SUDO_PASSWORD=${PASSWORD}
      - DEFAULT_WORKSPACE=/config/workspace
    labels:
      - traefik.enable=true
      - traefik.http.routers.code.entrypoints=websecure
      - traefik.http.routers.code.rule=Host(`code.${DOMAIN_NAME}`)
      - traefik.http.routers.code.tls.certresolver=certo
      - traefik.http.routers.code.service=code
      - traefik.http.services.code.loadBalancer.server.port=8443

# TODO:
# 3. Media (Servarrrrrrr + Jellyfin)
# 5. Grocy
# 6. librespeed
# 8. rdesktop